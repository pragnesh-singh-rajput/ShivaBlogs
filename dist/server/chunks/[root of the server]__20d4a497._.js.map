{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/subscribe/route.ts"],"sourcesContent":["\nimport { NextRequest, NextResponse } from 'next/server';\nimport { Resend } from 'resend';\nimport { z } from 'zod';\n\nconst resendApiKey = process.env.RESEND_API_KEY;\nconst resendAudienceId = process.env.RESEND_AUDIENCE_ID;\n\nif (!resendApiKey) {\n  console.error(\"RESEND_API_KEY environment variable is not set.\");\n}\nif (!resendAudienceId) {\n  console.error(\"RESEND_AUDIENCE_ID environment variable is not set.\");\n}\n\nconst resend = resendApiKey ? new Resend(resendApiKey) : null;\n\nconst subscribeSchema = z.object({\n  email: z.string().email({ message: \"Invalid email address\" }),\n});\n\nexport async function POST(request: NextRequest) {\n  if (!resend) {\n    return NextResponse.json({ error: \"Resend service is not configured.\" }, { status: 500 });\n  }\n  if (!resendAudienceId) {\n    return NextResponse.json({ error: \"Resend Audience ID is not configured.\" }, { status: 500 });\n  }\n\n  try {\n    const body = await request.json();\n    const validation = subscribeSchema.safeParse(body);\n\n    if (!validation.success) {\n      return NextResponse.json({ error: validation.error.format().email?._errors.join(', ') || \"Invalid input.\" }, { status: 400 });\n    }\n\n    const { email } = validation.data;\n\n    try {\n      const { data, error } = await resend.contacts.create({\n        email: email,\n        audienceId: resendAudienceId,\n        unsubscribed: false, // Optional: set to true if you want to add them as unsubscribed\n      });\n\n      if (error) {\n        console.error('Resend API Error:', error);\n        // Check for common errors, like already subscribed\n        if (error.name === 'validation_error' && error.message.toLowerCase().includes('already subscribed')) {\n             return NextResponse.json({ message: \"You are already subscribed!\" }, { status: 200 });\n        }\n        return NextResponse.json({ error: error.message || 'Failed to subscribe.' }, { status: 400 });\n      }\n\n      return NextResponse.json({ message: 'Successfully subscribed!', contactId: data?.id }, { status: 200 });\n    } catch (apiError: any) {\n      console.error('Error calling Resend API:', apiError);\n      return NextResponse.json({ error: 'An unexpected error occurred with the subscription service.' }, { status: 500 });\n    }\n\n  } catch (error) {\n    console.error('Request processing error:', error);\n    return NextResponse.json({ error: 'Invalid request body.' }, { status: 400 });\n  }\n}\n"],"names":[],"mappings":";;;AACA;AACA;AACA;;;;AAEA,MAAM,eAAe,QAAQ,GAAG,CAAC,cAAc;AAC/C,MAAM,mBAAmB,QAAQ,GAAG,CAAC,kBAAkB;AAEvD,IAAI,CAAC,cAAc;IACjB,QAAQ,KAAK,CAAC;AAChB;AACA,IAAI,CAAC,kBAAkB;IACrB,QAAQ,KAAK,CAAC;AAChB;AAEA,MAAM,SAAS,eAAe,IAAI,0IAAA,CAAA,SAAM,CAAC,gBAAgB;AAEzD,MAAM,kBAAkB,sIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/B,OAAO,sIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QAAE,SAAS;IAAwB;AAC7D;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI,CAAC,QAAQ;QACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAoC,GAAG;YAAE,QAAQ;QAAI;IACzF;IACA,IAAI,CAAC,kBAAkB;QACrB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwC,GAAG;YAAE,QAAQ;QAAI;IAC7F;IAEA,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,aAAa,gBAAgB,SAAS,CAAC;QAE7C,IAAI,CAAC,WAAW,OAAO,EAAE;YACvB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,WAAW,KAAK,CAAC,MAAM,GAAG,KAAK,EAAE,QAAQ,KAAK,SAAS;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QAC7H;QAEA,MAAM,EAAE,KAAK,EAAE,GAAG,WAAW,IAAI;QAEjC,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,OAAO,QAAQ,CAAC,MAAM,CAAC;gBACnD,OAAO;gBACP,YAAY;gBACZ,cAAc;YAChB;YAEA,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,qBAAqB;gBACnC,mDAAmD;gBACnD,IAAI,MAAM,IAAI,KAAK,sBAAsB,MAAM,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,uBAAuB;oBAChG,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;wBAAE,SAAS;oBAA8B,GAAG;wBAAE,QAAQ;oBAAI;gBACxF;gBACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAAE,OAAO,MAAM,OAAO,IAAI;gBAAuB,GAAG;oBAAE,QAAQ;gBAAI;YAC7F;YAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAA4B,WAAW,MAAM;YAAG,GAAG;gBAAE,QAAQ;YAAI;QACvG,EAAE,OAAO,UAAe;YACtB,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA8D,GAAG;gBAAE,QAAQ;YAAI;QACnH;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}